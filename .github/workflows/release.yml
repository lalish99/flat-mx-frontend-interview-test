name: Create Release and Tag

on:
  push:
    branches:
      - main

jobs:
  Build_And_Install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14']

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - uses: c-hive/gha-yarn-cache@v1

      - name: Install dependensies
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm install yarn -g
          yarn --ignore-scripts --prefer-offline

  Build_and_Release:
    needs: [Build_And_Install]
    outputs:
      tag: ${{ steps.expose-release.outputs.tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - uses: c-hive/gha-yarn-cache@v1

      - name: Install dependensies
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm install yarn -g
          yarn --ignore-scripts --prefer-offline

      - name: Create new release
        uses: codfish/semantic-release-action@v1
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: 44210433+github-actions@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: 44210433+github-actions@users.noreply.github.com

      - name: Expose Release
        id: expose-release
        run: echo "::set-output name=tag::$RELEASE_VERSION"